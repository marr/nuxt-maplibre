# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Deploy VitePress site to Pages

on:
  push:
    branches: [main]
    paths:
      - 'package.json'
      - 'package-lock.json'
      - 'docs/**'

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false


jobs:
  # Build job
  build:
    env:
      NUXT_PUBLIC_MAP_TILER_KEY: ${{ vars.NUXT_PUBLIC_MAP_TILER_KEY }}
      NUXT_PUBLIC_GOOGLE_MAP_TILES_API_KEY: ${{ vars.NUXT_PUBLIC_GOOGLE_MAP_TILES_API_KEY }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm # or pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Install dependencies
        run: npm ci
      - name: Setup playground
        run: npm run dev:prepare
      - name: Build playground
        run: NUXT_APP_BASE_URL=/nuxt-maplibre/demo npm run demo:generate -- --preset github_pages
      - name: Build with VitePress
        run: VITE_BASE_URL=/nuxt-maplibre/ npm run docs:build
      - name: Make demo directory
        run: mkdir -p docs/.vitepress/dist/demo
      - name: Copy playground to docs
        run: cp -r playground/.output/public/* docs/.vitepress/dist/demo
      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
